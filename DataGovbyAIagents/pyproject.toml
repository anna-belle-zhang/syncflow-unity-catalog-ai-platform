[project]
name = "syncflow-governance"
version = "0.1.0"
description = "AI-powered data governance platform for Unity Catalog"
authors = [
    {name = "SyncFlow Contributors", email = "contributors@syncflow.dev"},
]
readme = "README.md"
license = {text = "Apache-2.0"}

dependencies = [
    "google-cloud-aiplatform[evaluation]>=1.112.0,<2.0.0",
    "google-cloud-bigquery>=3.14.0",
    "google-cloud-logging>=3.11.4",
    "google-genai>=0.1.0",
    "vertexai>=1.65.0",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.34.0",
    "streamlit>=1.42.0",
    "pandas>=2.0.0",
    "plotly>=5.0.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
]

requires-python = ">=3.10,<3.14"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.23.8",
    "pytest-cov>=6.0.0",
    "nest-asyncio>=1.6.0",
    "httpx>=0.24.0",
]

[project.optional-dependencies]
lint = [
    "ruff>=0.4.6",
    "mypy>=1.15.0",
    "codespell>=2.2.0",
    "types-pyyaml>=6.0.12.20240917",
    "types-requests>=2.32.0.20240914",
    "types-setuptools>=69.0.0",
]
load-test = [
    "locust>=2.15.0",
]

[tool.ruff]
line-length = 88
target-version = "py310"
extend-exclude = [
    ".venv",
    "local_test",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "RUF",  # ruff specific rules
]
ignore = ["E501", "C901"]

[tool.ruff.lint.isort]
known-first-party = ["app", "frontend"]

[tool.mypy]
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
no_implicit_optional = true
check_untyped_defs = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
follow_imports = "silent"
ignore_missing_imports = true
explicit_package_bases = true
disable_error_code = ["misc", "no-untyped-call", "no-any-return"]
exclude = [".venv", "local_test"]

[tool.codespell]
ignore-words-list = "rouge,cate"
skip = "./local_test/*,uv.lock,.venv,**/*.ipynb,.git"

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]
addopts = "-v --tb=short"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app", "frontend"]
